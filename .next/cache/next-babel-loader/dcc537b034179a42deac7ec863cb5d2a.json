{"ast":null,"code":"import Products from '../../models/Product';\nimport connectDb from '../../utils/connectDb';\nimport Product from '../../models/Product';\nconnectDb();\nexport default (async (req, res) => {\n  const {\n    page,\n    size\n  } = req.query;\n  const pageNum = Number(page);\n  const pageSize = Number(size);\n  let products = [];\n  const totalDocs = await Product.countDocuments();\n  const totalPages = Math.ceil(totalDocs / pageSize);\n\n  if (pageNum === 1) {\n    products = await Product.find().limit(pageSize);\n  } else {\n    const skips = pageSize * (pageNum - 1);\n    products = await Product.find().skip(skips).limit(pageSize);\n  } // const products = await Products.find()\n\n\n  res.status(200).json({\n    products,\n    totalPages\n  });\n});","map":{"version":3,"sources":["/Users/zacharycohen/Desktop/react-reserve/pages/api/products.js"],"names":["Products","connectDb","Product","req","res","page","size","query","pageNum","Number","pageSize","products","totalDocs","countDocuments","totalPages","Math","ceil","find","limit","skips","skip","status","json"],"mappings":"AAEA,OAAOA,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEAD,SAAS;AAGT,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAeH,GAAG,CAACI,KAAzB;AACA,QAAMC,OAAO,GAAGC,MAAM,CAACJ,IAAD,CAAtB;AACA,QAAMK,QAAQ,GAAGD,MAAM,CAACH,IAAD,CAAvB;AACA,MAAIK,QAAQ,GAAG,EAAf;AACA,QAAMC,SAAS,GAAG,MAAMV,OAAO,CAACW,cAAR,EAAxB;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAWJ,SAAS,GAAGF,QAAvB,CAAnB;;AACA,MAAGF,OAAO,KAAI,CAAd,EAAgB;AACbG,IAAAA,QAAQ,GAAG,MAAMT,OAAO,CAACe,IAAR,GAAeC,KAAf,CAAqBR,QAArB,CAAjB;AACF,GAFD,MAEK;AACF,UAAMS,KAAK,GAAGT,QAAQ,IAAIF,OAAO,GAAG,CAAd,CAAtB;AACAG,IAAAA,QAAQ,GAAG,MAAMT,OAAO,CAACe,IAAR,GAAeG,IAAf,CAAoBD,KAApB,EAA2BD,KAA3B,CAAiCR,QAAjC,CAAjB;AACF,GAZ8B,CAa/B;;;AACDN,EAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEX,IAAAA,QAAF;AAAYG,IAAAA;AAAZ,GAArB;AACF,CAfD","sourcesContent":["\n\nimport Products from '../../models/Product'\nimport connectDb from '../../utils/connectDb'\nimport Product from '../../models/Product'\n\nconnectDb()\n\n\nexport default async (req, res) => {\n    const {page, size} = req.query\n    const pageNum = Number(page)\n    const pageSize = Number(size)\n    let products = [];\n    const totalDocs = await Product.countDocuments()\n    const totalPages = Math.ceil( totalDocs / pageSize )\n    if(pageNum ===1){\n       products = await Product.find().limit(pageSize)\n    }else{\n       const skips = pageSize * (pageNum - 1)\n       products = await Product.find().skip(skips).limit(pageSize)\n    }\n    // const products = await Products.find()\n   res.status(200).json({ products, totalPages})\n}\n"]},"metadata":{},"sourceType":"module"}